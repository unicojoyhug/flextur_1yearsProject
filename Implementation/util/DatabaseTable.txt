CREATE TABLE Kommune (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
navn varchar(50) UNIQUE NOT NULL
);


///Alter table kommune
///add constraint kommuneNavn UNIQUE (navn);


CREATE TABLE Postnummer (
postnummer int IDENTITY,
bynavn varchar(50) NOT NULL,
kommune int,
foreign key (kommune) references kommune(id),
);


CREATE TABLE BilType (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
navn varchar(255),
maxAntalPersoner int,
tilvalgMulighed boolean DEFAULT TRUE NOT NULL

);

CREATE TABLE Bil (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
navn varchar(255),
type int,
foreign key (type) references BilType(id),
);

CREATE TABLE Rolle (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
rolle varchar(50) NOT NULL
);

INSERT INTO "PUBLIC"."ROLLE"
(  "ROLLE" )
VALUES ( 'kunde');

INSERT INTO "PUBLIC"."ROLLE"
(  "ROLLE" )
VALUES ( 'bestillingsmodtagelse');

CREATE TABLE Bestillingsmodtagelse (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
loginId varchar(255),
kodeord varchar(255),
rolle int,
foreign key (rolle) references rolle(id),
primary key (loginId, kodeord, rolle)

);

CREATE TABLE CPR (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
cprNummer varchar(11) NOT NULL

);

CREATE TABLE Kunde (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
loginId int,
foreign key (loginId) references CPR(id),
kodeord varchar(255),
rolle int,
foreign key (rolle) references rolle(id),
primary key (loginId, kodeord, rolle),

email varchar(255),
telefon varchar(255),
fornavn varchar(255),
efternavn varchar(255),
adress varchar(255) NOT NULL,

kommune int,
foreign key (kommune) references kommune(id),

postnummer int,
foreign key (postnummer) references postnummer(postnummer),

erAktivt boolean DEFAULT TRUE NOT NULL
);

//?????/////
create table ekstratilvalg(
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
navn varchar(255) UNIQUE NOT NULL,
antal int
);
/////////////////////

CREATE TABLE Flextur (
id bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
kundeId int NOT NULL,
foreign key (kundeId) references Kunde(id),
dato date NOT NULL,
tid time NOT NULL,

fraPostnummer int, 
tilPostnummer int,
foreign key (fraPostnummer) references Postnummer(postnummer),
foreign key (tilPostnummer) references Postnummer(postnummer),

fraAdress varchar(255) NOT NULL,
tilAdress varchar(255) NOT NULL,

antalPersoner int NOT NULL,
kommentar varchar(1000),

pris decimal(10,2),

barnevogne int,
kørestole int, 
baggage int, 
autostole int,

erGodkendt boolean DEFAULT FALSE NOT NULL

);

CREATE TABLE FlexturMedBil (
id bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE,
bil int,
foreign key (bil) references bil(id),
flextur bigint UNIQUE,
foreign key (flextur)references flextur(id),
dato Date,

primary key (bil, flextur)

);

/// kommune

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Aarhus');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Favrskov');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Hedensted');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Herning');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Holstebro');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Horsens');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Ikast/Brande');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Lemvig');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Norddjurs');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Odder');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Randers');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Ringkøbing/Skjern');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Samsø');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Silkeborg');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Skanderborg');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Skive');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Struer');


INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Syddjurs');

INSERT INTO "PUBLIC"."KOMMUNE"
( "NAVN" )
VALUES ( 'Viborg');



////postnummer
INSERT INTO "PUBLIC"."POSTNUMMER"
( "POSTNUMMER", "BYNAVN", "KOMMUNE" )
VALUES ( 7400, 'Herning', 4);


INSERT INTO "PUBLIC"."POSTNUMMER"
( "POSTNUMMER", "BYNAVN", "KOMMUNE" )
VALUES ( 8000, 'Aarhus C', 1);


//// CPR nummer first before opret kunde using loginid = id of cprnummer table
INSERT INTO "PUBLIC"."CPR"
( "CPRNUMMER" )
VALUES ( '170182-3628');

INSERT INTO "PUBLIC"."KUNDE"
( "LOGINID", "KODEORD", "ROLLE", "EMAIL", "TELEFON", "FORNAVN", "EFTERNAVN", "ADRESS", "KOMMUNE", "POSTNUMMER" )
VALUES ( 1, '123', 1 , 'juy@me.com', '31330995', 'Juyoung', 'Choi', 'H.C.Ørstedsvej 100', 4, 7400)

////// biltype

INSERT INTO "PUBLIC"."BILTYPE"
( "NAVN", "MAXANTALPERSONER", "TILVALGMULIGHED" )
VALUES ('Taxa',4 , false);

INSERT INTO "PUBLIC"."BILTYPE"
( "NAVN", "MAXANTALPERSONER", "TILVALGMULIGHED" )
VALUES ('Liftbus',3 , true);

INSERT INTO "PUBLIC"."BILTYPE"
( "NAVN", "MAXANTALPERSONER", "TILVALGMULIGHED" )
VALUES ('Personvogn',5 , true);


////bil
INSERT INTO "PUBLIC"."BIL"
( "NAVN", "TYPE" )
VALUES ( 'Taxa1', 1);

INSERT INTO "PUBLIC"."BIL"
( "NAVN", "TYPE" )
VALUES ( 'Taxa2', 1);

INSERT INTO "PUBLIC"."BIL"
( "NAVN", "TYPE" )
VALUES ('Liftvogn1', 2);

INSERT INTO "PUBLIC"."BIL"
( "NAVN", "TYPE" )
VALUES ('Personvogn1', 3);

/// FlexturMedBil
INSERT INTO "PUBLIC"."FLEXTURMEDBIL"
( "BIL", "FLEXTUR", "DATO" )
VALUES (  3, 1 ,'2016-05-21' );



//getting the list idea 1
select bil.id, bil.navn, biltype.maxantalpersoner, biltype.tilvalgmulighed, flexturmedbil.dato  from bil 
inner join biltype on bil.type = biltype.id
inner join flexturMedBil on flexturMedBil.bil = bil.id
inner join flextur on flextur.id = flexturMedbil.flextur
where dato>'2016-05-21'

///// Flextur

INSERT INTO "PUBLIC"."FLEXTUR"
( "KUNDEID", "DATO", "TID", "FRAPOSTNUMMER", "TILPOSTNUMMER", "FRAADRESS", "TILADRESS", "ANTALPERSONER", "KOMMENTAR", "PRIS", "BARNEVOGNE", "KØRESTOLE", "BAGGAGE", "AUTOSTOLE")
VALUES ( 1, '2016-05-21','10:00:00' ,7400 ,8000 , 'HCØrstedsvej', ' Nordre Ringgade 1',3 , 'hej' , 100.00, 1, 0, 1, 0);


INSERT INTO "PUBLIC"."FLEXTUR"
( "KUNDEID", "DATO", "TID", "FRAPOSTNUMMER", "TILPOSTNUMMER", "FRAADRESS", "TILADRESS", "ANTALPERSONER", "KOMMENTAR", "PRIS", "BARNEVOGNE", "KØRESTOLE", "BAGGAGE", "AUTOSTOLE" )
VALUES ( 1, '2016-05-29','10:00:00' ,7400 ,7400 , 'HCØrstedsvej', 'HerningCenter',3 , 'hej' , 100.00, 1, 0, 1, 0);





INSERT INTO "PUBLIC"."FLEXTUR"
( "ID", "KUNDEID", "DATO", "TID", "FRAPOSTNUMMER", "TILPOSTNUMMER", "FRAADRESS", "TILADRESS", "ANTALPERSONER", "KOMMENTAR", "PRIS", "BARNEVOGNE", "KØRESTOLE", "BAGGAGE", "AUTOSTOLE", "ERGODKENDT" )
VALUES ( , , , , , , '', '', , '', , , , , , )

//////getMatchendeHistorik
select dato, fraAdress, fraPostnummer, tilAdress, tilpostnummer,  antalpersoner, pris from flextur 

inner join kunde on kundeid = kunde.id

inner join cpr on cpr.id = kunde.loginid


where (dato >= '2016-05-01' AND  dato <= '2016-05-30') AND cpr.cprnummer='170182-3628';





select cpr.cprnummer, kunde.efternavn, kunde.fornavn, kundeid, kommune.navn as kommune, sum(antalpersoner) as AntalPersoner,
 
count(id) as antalAfTur , sum(pris) as total_pris from flextur 

inner join kunde on kundeid = kunde.id

inner join cpr on cpr.id = kunde.loginid

inner join kommune on kunde.kommune = kommune.id

where (dato >= '2016-05-01' AND  dato <= '2016-05-30') AND kundeid =3 

group by  kundeid, cpr.cprnummer, kunde.efternavn, kunde.fornavn, kommune.navn;


//
UPDATE "PUBLIC"."KUNDE" SET  kodeord ='pmWkWSBCL51Bfkhn79xPuKBKHz//H6B+mY6G9/eieuM=' where id = 3


///
INSERT INTO bestillingsmodtagelse ("LOGINID", "KODEORD", "ROLLE") 
values ('bm1@flextur.dk', 'pmWkWSBCL51Bfkhn79xPuKBKHz//H6B+mY6G9/eieuM=', 2)


///
Select * from bestillingsmodtagelse inner join rolle on rolle.id = bestillingsmodtagelse.rolle where bestillingsmodtagelse.loginid = 'bm1@flextur.dk'


/////
select loginid, kodeord, rolle from bestillingsmodtagelse
union
select cpr.cprNummer, kodeord, rolle from kunde
inner join cpr on cpr.id = kunde.loginid




//////
Select * from (Select id, loginid, kodeord, rolle.rolle from bestillingsmodtagelse inner join rolle on rolle.id = bestillingsmodtagelse.rolle  
union 
Select id, cpr.cprNummer as loginid, kodeord, rolle.rolle from kunde  inner join cpr on cpr.id = kunde.loginid inner join rolle on rolle.id = kunde.rolle  
where kunde.erAktivt = true  )
where loginid = '170182-3628'


//////
select * from bil
full join flexturmedbil 
on flexturmedbil.bil = bil.id
inner join biltype on bil.type = biltype.id
